			Xvisor on Pine64 Board

		ARM64 Guest Linux on Xvisor on Pine64 Board.

Boot pine64 with u-boot compiled steps mentioned at below like

1. u-boot capable of tftp please go through:
   https://github.com/apritzel/pine64/blob/master/README.md
2. u-boot capable of sd card image loading.
   https://github.com/longsleep/build-pine64-image/blob/master/u-boot-postprocess/README.md

This section of readme explains how to build & run Xvisor for pine64.

Please follow the steps below to build & run Xvisor on Pine64
Model (v11.xx or higher) and also boot ARM64 Linux as Guest OS:

  [1. Build environment for Xvisor]
  # CROSS_COMPILE=aarch64-linux-gnu-

  [2. GoTo Xvisor source directory]
  # cd <xvisor_source_directory>

  [3. Initialize Xvisor submodules]
  # git submodule init
  # git submodule update
  (Note: This is required to be done only once in freshly cloned xvisor source)

  [4. Configure Xvisor with Generic-V8 default settings]
  # make ARCH=arm pine64-defconfig 

  [5. Build Xvisor & DTBs]
  # make; make dtbs
  # mkimage -A arm -O linux -T kernel -C none -a 0x41080000 -e 0x41080000 -n Xvisor -d build/vmm.bin build/uvmm.bin

  [6. Build Basic Firmware]
  # make -C tests/arm64/virt-v8/basic

  [7. Copy Linux defconfig to Linux build directory]
  # cp tests/arm64/virt-v8/linux/linux-<linux_version>_defconfig <linux_build_directory>/.config

  [8. GoTo Linux source directory]
  # cd <linux_source_directory>

  [9. Configure Linux in build directory]
  # make O=<linux_build_directory> ARCH=arm64 oldconfig

  [10. Build Linux in build directory to reflect changes in kernel image]
  # make O=<linux_build_directory> ARCH=arm64 Image dtbs

  [11. Create BusyBox RAMDISK to be used as RootFS for Linux kernel]
  (Note: For subsequent steps, we will assume that your RAMDISK is located at <busybox_rootfs_directory>/rootfs.img)
  (Note: Please refer tests/common/busybox/README.md for creating rootfs.img using BusyBox)

  [12. GoTo Xvisor source directory]
  # cd <xvisor_source_directory>

  [13. Create disk image for Xvisor]
  # mkdir -p ./build/disk/tmp
  # mkdir -p ./build/disk/system
  # cp -f ./docs/banner/roman.txt ./build/disk/system/banner.txt
  # cp -f ./docs/logo/xvisor_logo_name.ppm ./build/disk/system/logo.ppm
  # mkdir -p ./build/disk/images/arm64/virt-v8
  # ./build/tools/dtc/bin/dtc -I dts -O dtb -o ./build/disk/images/arm64/virt-v8x2.dtb ./tests/arm64/virt-v8/virt-v8x2.dts
  # cp -f ./build/tests/arm64/virt-v8/basic/firmware.bin ./build/disk/images/arm64/virt-v8/firmware.bin
  # cp -f ./tests/arm64/virt-v8/linux/nor_flash.list ./build/disk/images/arm64/virt-v8/nor_flash.list
  # cp -f ./tests/arm64/virt-v8/linux/cmdlist ./build/disk/images/arm64/virt-v8/cmdlist
  # cp -f <linux_build_directory>/arch/arm/boot/Image ./build/disk/images/arm64/virt-v8/Image
  # cp -f <linux_build_directory>/virt-v8.dtb ./build/disk/images/arm64/virt-v8/virt-v8.dtb
  # ./build/tools/dtc/bin/dtc -I dts -O dtb -o ./build/disk/images/arm64/virt-v8/virt-v8.dtb ./tests/arm64/virt-v8/linux/virt-v8.dts
  # cp -f <busybox_rootfs_directory>/rootfs.img ./build/disk/images/arm64/rootfs.img
  # genext2fs -B 1024 -b 16384 -d ./build/disk ./build/disk.img

  [14. On Pine64 Board with u-boot]
  u-boot# setenv ipaddr <Board IP addr e.g 192.168.1.2>;
  u-boot# setenv serverip <TFTP server IP e.g. 192.168.1.1>;
  u-boot# setenv fdt_addr 0x45000000;
  Load one guest or zero guest dtb
  u-boot# tftp 0x45000000 one_guest_virt-v8.dtb;fdt addr ${fdt_addr}; fdt resize;
  If you are using zero guest dtb then you can skip disk.img loading step.
  u-boot# tftp 0x45300000 disk.img (Build with above steps)
  u-boot# tftp 0x41080000 uvmm.bin; bootm 0x41080000 - 0x45000000

  After this one should reach to Xvisor command prompt.

  [15. Kick Guest0 to start Basic Firmware]
  XVisor# guest kick guest0

  [16. Bind to virtual UART]
  XVisor# vserial bind guest0/uart0

  [17. Copy linux from NOR flash to RAM and start linux booting from RAM]
  [guest0/uart0] basic# autoexec
  (Note: "autoexec" is a short-cut command)
  (Note: The <xvisor_source_directory>/tests/arm64/virt-v8/linux/cmdlist file
   which we have added to guest NOR flash contains set of commands for booting
   linux from NOR flash)

  [18. Wait for Linux prompt to come-up and then try out some commands]
  [guest0/uart0] / # ls

  [19. Enter character seqence 'ESCAPE+x+q" return to Xvisor prompt]
  [guest0/uart0] / #

  (Note: replace all <> brackets based on your workspace)
  (Note: some of the above steps will need to be adapted for other
   types of ARM host)
  (Note: you are free to change the ordering of above steps based
   on your workspace)


